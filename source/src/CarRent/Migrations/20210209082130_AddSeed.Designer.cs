// <auto-generated />
using CarRent.Models.DBModels;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarRent.Migrations
{
    [DbContext(typeof(carrentContext))]
    [Migration("20210209082130_AddSeed")]
    partial class AddSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("CarRent.CarManagement.Domain.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Brand")
                        .HasColumnName("brand")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("CarClassDescription");

                    b.Property<string>("Typ")
                        .HasColumnName("typ")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("CarClassDescription");

                    b.ToTable("car");
                });

            modelBuilder.Entity("CarRent.CarManagement.Domain.CarClass", b =>
                {
                    b.Property<string>("Description")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("description");

                    b.Property<string>("Price")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 64)))
                        .HasColumnName("price")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Description");

                    b.ToTable("carclass");

                    b.HasData(
                        new
                        {
                            Description = "Einfachklasse",
                            Price = "13.5"
                        },
                        new
                        {
                            Description = "Mittelklasse",
                            Price = "20.6"
                        },
                        new
                        {
                            Description = "Luxusklasse",
                            Price = "35.45"
                        });
                });

            modelBuilder.Entity("CarRent.CustomerManagement.Domain.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.ToTable("customer");
                });

            modelBuilder.Entity("CarRent.CarManagement.Domain.Car", b =>
                {
                    b.HasOne("CarRent.CarManagement.Domain.CarClass", "CarClass")
                        .WithMany("Cars")
                        .HasForeignKey("CarClassDescription");
                });
#pragma warning restore 612, 618
        }
    }
}
